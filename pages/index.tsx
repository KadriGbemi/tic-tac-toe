import { useContext, useEffect, useState } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import { GameContext } from "../contexts/game";

export default function Home() {
  const router = useRouter();
  const {
    setPlayers,
    setPlayersName,
    playersName,
    isPlayerOne,
    setIsPlayerOne,
  } = useContext(GameContext);

  const previousPlayerX = playersName?.X;
  const previousPlayerO = playersName?.O;

  const [player1, setPlayer1] = useState(previousPlayerX);
  const [player2, setPlayer2] = useState(playersName?.O);

  const handlePlayerType = (evt: React.FormEvent<HTMLSelectElement>) => {
    const target = evt.target as HTMLSelectElement;
    setIsPlayerOne(target.value === "onePlayer");
  };

  useEffect(() => {
    if (previousPlayerX) {
      setPlayer1(previousPlayerX);
    }

    if (previousPlayerO) {
      setPlayer2(previousPlayerO);
    }
  }, [previousPlayerX, previousPlayerO]);

  const handleSubmit = (event: React.FormEvent<HTMLInputElement>) => {
    event.preventDefault();

    if (isPlayerOne) {
      localStorage.setItem("isPlayerOne", "true");
      localStorage.setItem("O", "Computer");
    } else {
      localStorage.setItem("X", player1 || "");
      localStorage.setItem("O", player2 || "");
    }

    setPlayers({
      player1: "X",
      player2: "O",
    });

    setPlayersName({
      X: player1,
      O: player2,
    });

    router.push("/game");
  };

  return (
    <div className="container">
      <Head>
        <title>Tic-tac toe game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <div id="game-form" onSubmit={handleSubmit}>
          <h3 className="form-header-title">Game Input details</h3>
          <form>
            <label>Choose players:</label>
            <div>
              <select
                name="players"
                id="players"
                onChange={handlePlayerType}
                value={isPlayerOne ? "onePlayer" : "twoPlayers"}
              >
                <option value="twoPlayers">Play as two persons</option>
                <option value="onePlayer">Play with computer</option>
              </select>
            </div>
            <div>
              <label>Enter player 1:</label>
              <input
                placeholder="Enter player one's name"
                id="first_name"
                name="player-1"
                type="text"
                onChange={(event) => setPlayer1(event.target.value)}
                value={player1}
              />
            </div>
            {!isPlayerOne && (
              <div>
                <label>Enter player 2:</label>
                <input
                  placeholder="Enter player two name"
                  name="player-2"
                  type="text"
                  value={player2}
                  onChange={(event) => setPlayer2(event.target.value)}
                />
              </div>
            )}

            <div className="action">
              <button type="submit">
                {previousPlayerX || previousPlayerO ? "Continue" : "Start"} game
              </button>
            </div>
          </form>
        </div>
      </main>
    </div>
  );
}
